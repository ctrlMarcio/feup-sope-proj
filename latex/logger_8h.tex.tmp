\hypertarget{logger_8h}{}\section{/home/runner/work/feup-\/sope-\/proj/feup-\/sope-\/proj/src/logger.h File Reference}
\label{logger_8h}\index{/home/runner/work/feup-\/sope-\/proj/feup-\/sope-\/proj/src/logger.\+h@{/home/runner/work/feup-\/sope-\/proj/feup-\/sope-\/proj/src/logger.\+h}}


Is responsible for logging the information on a logfile.  


{\ttfamily \#include \char`\"{}util.\+h\char`\"{}}\newline
Include dependency graph for logger.\+h\+:
% FIG 0
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{logger_8h_a4c6b87853cbaf189fe1e484706ae1875}\label{logger_8h_a4c6b87853cbaf189fe1e484706ae1875}} 
\#define {\bfseries C\+R\+E\+A\+TE}~\char`\"{}C\+R\+E\+A\+TE\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_ad111e603bbebe5d87f6bc39264ce4733}\label{logger_8h_ad111e603bbebe5d87f6bc39264ce4733}} 
\#define {\bfseries E\+X\+IT}~\char`\"{}E\+X\+IT\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_a5bd1797123c87338c588bb57f3b44307}\label{logger_8h_a5bd1797123c87338c588bb57f3b44307}} 
\#define {\bfseries R\+E\+C\+V\+\_\+\+S\+I\+G\+N\+AL}~\char`\"{}R\+E\+C\+V\+\_\+\+S\+I\+G\+N\+AL\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_aa7ad3459ed564b229d2fdf6ef188c044}\label{logger_8h_aa7ad3459ed564b229d2fdf6ef188c044}} 
\#define {\bfseries S\+E\+N\+D\+\_\+\+S\+I\+G\+N\+AL}~\char`\"{}S\+E\+N\+D\+\_\+\+S\+I\+G\+N\+AL\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_ab6e190608d8fe3cef5b16a4411600aae}\label{logger_8h_ab6e190608d8fe3cef5b16a4411600aae}} 
\#define {\bfseries R\+E\+C\+V\+\_\+\+P\+I\+PE}~\char`\"{}R\+E\+C\+V\+\_\+\+P\+I\+PE\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_abe99378ac2f61a7f66fba97ba77713bb}\label{logger_8h_abe99378ac2f61a7f66fba97ba77713bb}} 
\#define {\bfseries S\+E\+N\+D\+\_\+\+P\+I\+PE}~\char`\"{}S\+E\+N\+D\+\_\+\+P\+I\+PE\char`\"{}
\item 
\mbox{\Hypertarget{logger_8h_a7542714e8c7019113b62db816c78d50c}\label{logger_8h_a7542714e8c7019113b62db816c78d50c}} 
\#define {\bfseries E\+N\+T\+RY}~\char`\"{}E\+N\+T\+RY\char`\"{}
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{logger_8h_a3bba1f58f6cd934f422886e04c426def}{setup\+Logger} ()
\begin{DoxyCompactList}\small\item\em Setups the logfile, creating the file or appending if it already exists and writes a header. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a6362097e39646db0e618e8338bd9a20f}{close\+Logger} ()
\begin{DoxyCompactList}\small\item\em Closes the logfile. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a9c0dad9d96ace5f97d8b66edeebef3fa}{log\+Create} (struct \hyperlink{structflags}{flags} $\ast$\hyperlink{structflags}{flags})
\begin{DoxyCompactList}\small\item\em Logs the creation of a process. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a0edc12fa4daffd3af2e9e4cbe467bba0}{log\+Entry} (struct \hyperlink{structflags}{flags} $\ast$\hyperlink{structflags}{flags}, long size, char $\ast$name)
\begin{DoxyCompactList}\small\item\em Logs the analysing of a file or directory. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a94f7fcb0af5138a50430a60400bc66ff}{log\+Exit} (int status)
\begin{DoxyCompactList}\small\item\em Logs the exit of a process. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a8eec6c71761b7dafb927cb9904ebaaac}{log\+Recv\+Pipe} (int size)
\begin{DoxyCompactList}\small\item\em Logs the receiving of a pipe. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_ac8bc3845655586b6266c1c27dd38fb01}{log\+Send\+Pipe} (int size)
\begin{DoxyCompactList}\small\item\em Logs the sending of a pipe. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_ae63b1c831a9852ebecbdc1b1489503fc}{log\+Recv\+Signal} (int signo)
\begin{DoxyCompactList}\small\item\em Logs the receiving of a signal. \end{DoxyCompactList}\item 
void \hyperlink{logger_8h_a5e9c2d823324d1f87187ad5ca7ee18db}{log\+Send\+Signal} (int signo, pid\+\_\+t pid)
\begin{DoxyCompactList}\small\item\em Logs the sending of a signal. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{logger_8h_a729f2f33deaaca097a5fa934eaea8530}\label{logger_8h_a729f2f33deaaca097a5fa934eaea8530}} 
char {\bfseries F\+I\+L\+E\+N\+A\+ME} \mbox{[}256\mbox{]}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Is responsible for logging the information on a logfile. 

\begin{DoxyAuthor}{Author}
Luís Tavares 

Márcio Duarte 
\end{DoxyAuthor}


\subsection{Function Documentation}
\mbox{\Hypertarget{logger_8h_a6362097e39646db0e618e8338bd9a20f}\label{logger_8h_a6362097e39646db0e618e8338bd9a20f}} 
\index{logger.\+h@{logger.\+h}!close\+Logger@{close\+Logger}}
\index{close\+Logger@{close\+Logger}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{close\+Logger()}{closeLogger()}}
{\footnotesize\ttfamily void close\+Logger (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Closes the logfile. 

\begin{DoxyWarning}{Warning}
Use only at the end of the program, no logs will be processed after. 
\end{DoxyWarning}
\mbox{\Hypertarget{logger_8h_a9c0dad9d96ace5f97d8b66edeebef3fa}\label{logger_8h_a9c0dad9d96ace5f97d8b66edeebef3fa}} 
\index{logger.\+h@{logger.\+h}!log\+Create@{log\+Create}}
\index{log\+Create@{log\+Create}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Create()}{logCreate()}}
{\footnotesize\ttfamily void log\+Create (\begin{DoxyParamCaption}\item[{struct \hyperlink{structflags}{flags} $\ast$}]{flags }\end{DoxyParamCaption})}



Logs the creation of a process. 


\begin{DoxyParams}{Parameters}
{\em flags} & the current flags of the program \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_a0edc12fa4daffd3af2e9e4cbe467bba0}\label{logger_8h_a0edc12fa4daffd3af2e9e4cbe467bba0}} 
\index{logger.\+h@{logger.\+h}!log\+Entry@{log\+Entry}}
\index{log\+Entry@{log\+Entry}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Entry()}{logEntry()}}
{\footnotesize\ttfamily void log\+Entry (\begin{DoxyParamCaption}\item[{struct \hyperlink{structflags}{flags} $\ast$}]{flags,  }\item[{long}]{size,  }\item[{char $\ast$}]{name }\end{DoxyParamCaption})}



Logs the analysing of a file or directory. 


\begin{DoxyParams}{Parameters}
{\em flags} & the current flags of the program \\
\hline
{\em size} & the number of bytes of the entry \\
\hline
{\em name} & tha path of the entry \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_a94f7fcb0af5138a50430a60400bc66ff}\label{logger_8h_a94f7fcb0af5138a50430a60400bc66ff}} 
\index{logger.\+h@{logger.\+h}!log\+Exit@{log\+Exit}}
\index{log\+Exit@{log\+Exit}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Exit()}{logExit()}}
{\footnotesize\ttfamily void log\+Exit (\begin{DoxyParamCaption}\item[{int}]{status }\end{DoxyParamCaption})}



Logs the exit of a process. 


\begin{DoxyParams}{Parameters}
{\em status} & the exit status of the process \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_a8eec6c71761b7dafb927cb9904ebaaac}\label{logger_8h_a8eec6c71761b7dafb927cb9904ebaaac}} 
\index{logger.\+h@{logger.\+h}!log\+Recv\+Pipe@{log\+Recv\+Pipe}}
\index{log\+Recv\+Pipe@{log\+Recv\+Pipe}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Recv\+Pipe()}{logRecvPipe()}}
{\footnotesize\ttfamily void log\+Recv\+Pipe (\begin{DoxyParamCaption}\item[{int}]{size }\end{DoxyParamCaption})}



Logs the receiving of a pipe. 

Pipes only share sizes.


\begin{DoxyParams}{Parameters}
{\em size} & the size received \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_ae63b1c831a9852ebecbdc1b1489503fc}\label{logger_8h_ae63b1c831a9852ebecbdc1b1489503fc}} 
\index{logger.\+h@{logger.\+h}!log\+Recv\+Signal@{log\+Recv\+Signal}}
\index{log\+Recv\+Signal@{log\+Recv\+Signal}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Recv\+Signal()}{logRecvSignal()}}
{\footnotesize\ttfamily void log\+Recv\+Signal (\begin{DoxyParamCaption}\item[{int}]{signo }\end{DoxyParamCaption})}



Logs the receiving of a signal. 


\begin{DoxyParams}{Parameters}
{\em signo} & the signal received \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_ac8bc3845655586b6266c1c27dd38fb01}\label{logger_8h_ac8bc3845655586b6266c1c27dd38fb01}} 
\index{logger.\+h@{logger.\+h}!log\+Send\+Pipe@{log\+Send\+Pipe}}
\index{log\+Send\+Pipe@{log\+Send\+Pipe}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Send\+Pipe()}{logSendPipe()}}
{\footnotesize\ttfamily void log\+Send\+Pipe (\begin{DoxyParamCaption}\item[{int}]{size }\end{DoxyParamCaption})}



Logs the sending of a pipe. 

Pipes only share sizes.


\begin{DoxyParams}{Parameters}
{\em size} & the size sent \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_a5e9c2d823324d1f87187ad5ca7ee18db}\label{logger_8h_a5e9c2d823324d1f87187ad5ca7ee18db}} 
\index{logger.\+h@{logger.\+h}!log\+Send\+Signal@{log\+Send\+Signal}}
\index{log\+Send\+Signal@{log\+Send\+Signal}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{log\+Send\+Signal()}{logSendSignal()}}
{\footnotesize\ttfamily void log\+Send\+Signal (\begin{DoxyParamCaption}\item[{int}]{signo,  }\item[{pid\+\_\+t}]{pid }\end{DoxyParamCaption})}



Logs the sending of a signal. 


\begin{DoxyParams}{Parameters}
{\em signo} & the signal sent \\
\hline
{\em pid} & the destination process id \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{logger_8h_a3bba1f58f6cd934f422886e04c426def}\label{logger_8h_a3bba1f58f6cd934f422886e04c426def}} 
\index{logger.\+h@{logger.\+h}!setup\+Logger@{setup\+Logger}}
\index{setup\+Logger@{setup\+Logger}!logger.\+h@{logger.\+h}}
\subsubsection{\texorpdfstring{setup\+Logger()}{setupLogger()}}
{\footnotesize\ttfamily void setup\+Logger (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Setups the logfile, creating the file or appending if it already exists and writes a header. 

\begin{DoxyWarning}{Warning}
Use before any logger. 
\end{DoxyWarning}
